:root {
	--font-ui: 'Public Sans Variable', Helvetica, Arial, sans-serif;

	font-family: var(--font-ui);

	color: black;
	background-color: var(--color-bg);
	color-scheme: dark;
	font-synthesis: none;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	-webkit-text-size-adjust: 100%;
}

@property --background {
	syntax: '<color>';
	inherits: false;
}

.noise {
	background: var(
			--background-gradient,
			linear-gradient(to left, var(--background, red) 100dvw, blue)
		),
		url('/noise2.png'), url('/noise3.png');
	/* background:
		var(--background-gradient, linear-gradient(to left, var(--background, red) 100dvw, blue)),
		repeating-radial-gradient(#848484 0 0.0001%, rgba(244, 244, 244, 0.49) 0 0.0002%) 10% 0 /
			var(--bg-size) var(--bg-size),
		repeating-conic-gradient(rgb(0, 0, 0) 0 0.0001%, rgb(255, 255, 255) 0 0.0002%) 50% 50% /
			var(--bg-size) var(--bg-size); */
	background-blend-mode: overlay, difference;
	border-radius: 1rem;
	background-attachment: fixed;
}

.noise-overlay {
	pointer-events: none;
	position: absolute;
	height: 100%;
	width: 100%;
	background: url('/noise2.png'), url('/noise3-light.png');
	background-blend-mode: overlay, difference;
	mix-blend-mode: overlay;
}

.noise-light {
	background: var(
			--background-gradient,
			linear-gradient(to left, var(--background, red) 100dvw, blue)
		),
		url('/noise4.png');
	background: var(
			--background-gradient,
			linear-gradient(to left, var(--background, red) 100dvw, blue)
		),
		url('/noise2.png'), url('/noise3-light.png');
	background-blend-mode: overlay, difference;
	background-attachment: fixed;
}

.noise-film {
	background: var(
			--background-gradient,
			linear-gradient(to left, var(--background, red) 100dvw, blue)
		),
		url('/noise4.png');
	background-blend-mode: overlay;
	background-attachment: fixed;
}

ol,
ul {
	list-style: none;
}

.row {
	display: flex;
	justify-content: center;
	gap: 0.5rem;
}

.col {
	display: flex;
	flex-direction: column;
	gap: 1rem;
}

.center {
	justify-content: center;
}

.start {
	justify-content: flex-start;
}

.space {
	justify-content: space-between;
}

.align {
	align-items: center;
}

.wrap {
	flex-wrap: wrap;
}

.responsive-row {
	flex-direction: column;

	@media (min-width: 1024px) {
		flex-direction: row;
	}
}

.flexible {
	flex: 1;
}

.hidden {
	display: none;
}

* {
	scrollbar-width: thin;
	scrollbar-color: var(--color-scrollbar, #7a7a7a) transparent;
}

::-webkit-scrollbar-thumb {
	background-color: var(--color-scrollbar, #7a7a7a);
	border-radius: 1rem;
}

::-webkit-scrollbar-track {
	background-color: transparent;
}

.hr,
hr {
	display: block;
	height: 2px;
	min-height: 2px;
	width: 100%;
	background-color: currentColor;
}

.hr.thick,
hr.thick {
	height: 4px;
	min-height: 4px;
}

.mono {
	font-family: monospace;
}

*:not(h3) > a:not(:has(h3)) {
	text-decoration: underline;

	&:hover {
		text-decoration-style: double;
	}
}

*::selection {
	color: var(--background, white);
	background-color: var(--color, black);
}

h3 > a:hover,
a:has(h3):hover {
	text-decoration: underline;
	text-decoration-thickness: 4px;
}

h1 {
	font-size: 6rem;
	line-height: 1;
}

h2 {
	font-size: 4rem;
	line-height: 1;
}

h3 {
	line-height: 1;
	font-size: 3rem;
}

h4 {
	font-size: 2rem;
}

h5 {
	font-size: 1.75rem;
}

input[type='text'].inherit {
	font-size: inherit;
	padding: 0;
	max-width: 100%;
	display: block;
	outline: none;
	border: none;
	text-align: inherit;

	&:focus {
		outline: none;
	}
}
